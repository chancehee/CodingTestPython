'''<수 자료형>
-input자료형은 str 형태로 들어온다.
-e 는 10의 지수부를 의미한다. -> 1e9 = 1000000000 10억 / 75.25e1 = 752.5 / 3954e-3 = 3.954
----------코딩테스트에서 많이 사용한다---------- : 거리를 INF로 설정할때 10억을 간단히 표현 = 1e9

-오늘날 가장 널리 쓰이는 IEEE754 표준에서는 실수형을 저장하기 위해 4바이트 혹은 8바이트라는 고정된 크기의 메모리를 할당하며, 이러한 이유로 인해 현대 컴퓨터 시스템은 대체로 실수 정보를 표현하는 정확도에
한계를 가진다
ex) 0.3 + 0.6 = 0.8999999999 최대한 가깝게 표현하지만 완전히 같지는 않다.
따라서 값을 비교하는 로직을 세울 때에 round() 함수를 사용한다
rount(123.456, 1) = 둘째자리에서 반올림 123.5     (반올림 하고자 하는 위치 - 1)
round(12.3456, 3) = 넷째자리에서 반올림 12.346
'''

'''
a = 0.3 + 0.6
print(a)

if round(a, 4)==0.9:  #흔히 코딩테스트에서 소수점 다섯 번째 자리에서 반올림한 결과가 같으면 정답으로 처리.
    print(True)
else:
    print(False)
'''

'''
<나누기 연산자>
 / : 나눠진 결과를 실수형으로 처리한다
 % : 나머지 연산자
 // : 몫 연산자
<거듭 제곱 연산자>
 ** : 2**3 = 8
'''

'''
<리스트 자료형>
여러 개의 데이터를 연속적으로 담아 처리하기 위해 사용 
내부적으로 연결 리스트 자료구조를 채택하고 있어서 append(), remove() 등의 메서드를 지원한다.
리스트 대신에 배열 혹은 테이블이라고 부르기도 한다.
    빈 리스트 선언 방법
        a = [ ]
        a = list()
        
    인덱싱과 슬라이싱
        인덱싱: 리스트의 특정한 원소에 접근하는 것
        a[-1]: 뒤에서 첫번째 원소
        a[0]: 앞에서 첫번째 원소
        슬라이싱
        a[1 : 4]: 두번째 원소 ~ 네번째 원소 
        [1,2,3,4,5,6,7]  => [2,3,4]
        
    리스트 컴프리헨션
        : 리스트를 초기화하는 방법 중 하나이다.
        0~19 중에서 홀수만 포함하는 리스트
            a = [ i for i in range(20) if i%2 == 1]
            print(a)
            >>> [1,3,5,7,9,11,13,15,17,19]
'''

'''
# 크기가 n 이고, 모든 값이 0인 1차원 리스트 초기화 
n = 10
a = [0] * 10
print(a)
'''

'''
# 1부터 9까지의 수의 제곱 값을 포함하는 리스트
array = [i * i for i in range(10)]
print(array)
'''

'''
# N * M 크기의 2차원 리스트 초기화 // 3행 4 열  -> 2차원 리스트를 초기화 할 때는, 반드시 리스트 컴프리핸션을 이용해야 한다
n = 3
m = 4
array = [[0] * m  for _ in range(n)]  # _ : 반복을 수행하되 반복을 위한 변수의 값을 무시하고자 할 때 사용
print(array)
'''

'''
<리스트 관련 기타 메서드>
append(): 리스트에 원소 하나 삽입할 때 사용한다. 맨 뒤에 삽입
sort(): 오름차순 정렬 // reverse = True 를 통해 내림차순 정렬 가능 
reverse(): 원소 뒤집기 (좌우 대칭)
insert(인덱스 , 값) // 특정한 인덱스 위치에 원소를 삽입할 때 사용.
count(): 리스트에서 특정한 값을 가지는 데이터의 개수를 셀 때 사용.
remove(): 특정한 값을 갖는 원소를 제거, 값을 가진 원소가 여러 개면 하나만 제거한다. (앞에서 부터 제거)
    특정한 값을 갖는 원소를 모두 제거 하고 싶다면???????????/
        remove_set 개념 사용 
        a= [1,2,3,4,5,5,5]
        remove_set = {3,5}
        
        result = [i for i in a if i not in remove_set]
        print(result)
'''

