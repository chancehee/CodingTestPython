'''
<문자열 자료형>
-큰 따옴표와 작은 따옴표를 사용하여 변수를 초기화한다
-큰 따옴표안에 작은 따옴표를 문자열로 사용가능하고 \"(백 슬래쉬 큰 따옴표) 를 통하여 큰 따옴표를 문자열로 사용 가능하다.
    data = "don't you know \"Python?"
    > > > don't you know "python
-덧셈 연산자를 사용하여 문자열을 연결할 수 있다.
    a= hello
    b=world
    print(a+b)
    >> helloworld
-문자열 변수를 양의 정수와 곱하는 경우, 문자열이 그 값만큼 여러 번 더해진다
    a = "hello"
    print(a*3)
    >> hellohellohello
-파이썬의 문자열은 내부적으로 리스트와 같이 처리된다. = 문자열은 여러 개의 문자가 합쳐진 리스트라고 볼 수 있다.
따라서 인덱싱과 슬라이싱을 이용할 수 있다.
    a = "ABCDEF"
    print(a[2:4])
    >> CD
'''

'''
<튜플 자료형>
: 리스트와 거의 비슷, But 차이가 있다.
    차이점
        -튜플은 한 번 선언된 값을 변경할 수 없다.
        -리스트는 [] 를 이용하지만 , 튜플은 ()를 이용한다 
        -리스트에 비해 상대적으로 공간 효율적 
    어디에 사용하는가?
        -주로 그래프 알고리즘을 구현할 때 자주 사용된다. 예를 들어 다익스트라 최단 경로 알고리즘처럼 최단 경로를 찾아주는 알고리즘의 내부에서는 우선순위 큐를 이용하는데 해당 알고리즘에서 
        우선순위 큐에 한 번 들어간 값은 변경되지 않는다.
        -일반적으로 각 원소의 성질이 서로 다를 때 주로 사용한다.
'''

'''
<사전 자료형>
: 키와 값의 쌍을 데이터로 가지는 자료형
    특징
        -내부적으로 해시 테이블 이용 // O(1)의 시간 복잡도를 갖는다
    사용법
        data = dict()
        data['사과']='Apple'
        print(data)
        >> {'사과': 'Apple'}
    관련함수
        keys(): 키 데이터만 담은 리스트
        values(): 값 데이터만 담은 리스트
'''

'''
<집합 자료형>
    특징
        -중복을 허용하지 않는다.
        -순서가 없다.
    사용법
         data = set( [1,2,2,3] )
         print(data)
         >> {1,2,3}
    연산
        -합집합: |
        -교집합: &
        -차집합: -
    관련함수
        add()
        update()
        remove()

'''







