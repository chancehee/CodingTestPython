"""
DP: <2xn 타일링 2>

1. 아이디어:
    1x2, 2x1, 2x2 3가지 경우로 채우는 방법의 수를 구하기
    직접 규칙을 찾아보기

    시작타일을 놓을 때 1x2, 2x2, 2x1 2개 이렇게 3가지 방식으로 첫 타일을 놓는다.
    시작타일을 n x m 이라고 했을 때, 나머지 뒤의 타일은 총길이 - m 만큼을 채우면 된다.

    n = 1, dp[1] = 1가지
    n = 2, dp[2] = 3가지
    n = 3,
    3가지 경우
    1x2 일때 총길이 - 2 는 1이기 때문에 dp[1] = 1
    2x2 일때 총길이 - 2 는 1이기 때문에 dp[1] = 1
    2x1 2개 일때 총길이 - 1은 2이기 때문에 dp[2] = 3
    따라서
    dp[3] = dp[1] + dp[1] + dp[2] = 5

    n = 4,
    3가지 경우
    1x2 일때 총길이 - 2 는 2이기 때문에 dp[2] = 3
    2x2 일때 총길이 - 2 는 2이기 때문에 dp[2] = 3
    2x1 2개 일때 총길이 - 1은 3이기 때문에 dp[3] = 5
    따라서
    dp[4] = dp[2] + dp[2] + dp[3] = 11

    이런식으로 메모이제이션을 하여 구하고자 하는 길이의 타일을 배치할 때 경우의 수를 구해준다.

"""
n = int(input())
dp = [0] * 1001

dp[1] = 1
dp[2] = 3

for i in range(3,n+1):
    dp[i] = dp[i-1] + dp[i-2] + dp[i-2]

print(dp[n] % 10007)